Install Apache Kafka on Ubuntu 18.04

Step 1 — Creating a User for Kafka

sudo useradd kafka -m

(-m flag ensures that a home directory will be created for the user)


(Set the password using passwd)

sudo passwd kafka

(Add the kafka user to the sudo group)

sudo adduser kafka sudo

(Log into this account using su)

su -l kafka


Step 2 — Downloading and Extracting the Kafka Binaries
(create a directory in /home/kafka called Downloads)

mkdir ~/Downloads

(download the Kafka binaries using curl)
curl "https://www.apache.org/dist/kafka/2.1.1/kafka_2.11-2.1.1.tgz" -o ~/Downloads/kafka.tgz

(Create a directory called kafka)
mkdir ~/kafka && cd ~/kafka

(Extract the archive)
tar -xvzf ~/Downloads/kafka.tgz --strip 1
(--strip 1 flag to ensure that the archive's contents are extracted in ~/kafka/ itself and not in another directory)

Step 3 — Configuring the Kafka Server
(Kafka's default behavior will not allow us to delete a topic,category,group, or feed name to which messages can be published.)
(Kafka's configuration options are specified in server.properties)

nano ~/kafka/config/server.properties
delete.topic.enable = true
(Save&Exist file)


Step 4 — Creating Systemd Unit Files and Starting the Kafka Server

(We will create systemd unit files for the Kafka service.Help us perform common service actions such as starting, stopping, and restarting Kafka)
(Zookeeper is a service that Kafka uses to manage its cluster state and configurations)

sudo nano /etc/systemd/system/zookeeper.service
[Unit]
Requires=zookeeper.service
After=zookeeper.service

[Service]
Type=simple
User=kafka
ExecStart=/bin/sh -c '/home/kafka/kafka/bin/kafka-server-start.sh /home/kafka/kafka/config/server.properties > /home/kafka/kafka/kafka.log 2>&1'
ExecStop=/home/kafka/kafka/bin/kafka-server-stop.sh
Restart=on-abnormal

[Install]
WantedBy=multi-user.target

([Unit] section specifies that this unit file depends on zookeeper.service. This will ensure that zookeeper gets started automatically when the kafka service starts.
The [Service] section specifies that systemd should use the kafka-server-start.sh and kafka-server-stop.sh shell files for starting and stopping the service. It also specifies that Kafka should be restarted automatically if it exits abnormally.)

sudo nano /etc/systemd/system/kafka.service
[Unit]
Requires=zookeeper.service
After=zookeeper.service

[Service]
Type=simple
User=kafka
ExecStart=/bin/sh -c '/home/kafka/kafka/bin/kafka-server-start.sh /home/kafka/kafka/config/server.properties > /home/kafka/kafka/kafka.log 2>&1'
ExecStop=/home/kafka/kafka/bin/kafka-server-stop.sh
Restart=on-abnormal

[Install]
WantedBy=multi-user.target



(start Kafka with the following command:)
sudo systemctl start kafka
(check the journal logs for the kafka unit)
sudo journalctl -u kafka
(Kafka server listening on port 9092.)
(To enable kafka on server boot, run:)
sudo systemctl enable kafka


Step 5 — Testing the Installation
Publishing messages in Kafka requires:

A PRODUCER, which enables the publication of records and data to topics.
A CONSUMER, which reads messages and data from topics.

First, create a topic named TutorialTopic by typing:
~/kafka/bin/kafka-topics.sh --create --zookeeper localhost:2181 --replication-factor 1 --partitions 1 --topic TutorialTopic

(Create a producer from the command line using the kafka-console-producer.sh script
Publish the string "Hello, World" to the TutorialTopic topic by typing:)
echo "Hello, World" | ~/kafka/bin/kafka-console-producer.sh --broker-list localhost:9092 --topic TutorialTopic > /dev/null

(Next, you can create a Kafka consumer using the kafka-console-consumer.sh script.
Use of the --from-beginning flag, which allows the consumption of messages that were published before the consumer was started:)
~/kafka/bin/kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic TutorialTopic --from-beginning

Step 6 — Restricting the Kafka User
(Now that all of the installations are done, you can remove the kafka user's admin privileges)
(log out and log back in as any other non-root sudo user)
(Remove the kafka user from the sudo group:)
sudo deluser kafka sudo
sudo passwd kafka -l
sudo su - kafka








